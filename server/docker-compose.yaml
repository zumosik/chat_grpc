version: '3.8'
services:
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  notifications_service:
    build:
      context: ./services/notifications_service
      dockerfile: Dockerfile
      args:
        config_path_from: configs/dev.yml
    ports:
      - "5052:5052"
  auth_service:
    depends_on:
      - db # wait for db to be "ready" before starting
      - notifications_service # wait for notifications_service to be "ready" before starting
    build:
      context: ./services/auth_service
      dockerfile: Dockerfile
      args:
        config_path_from: configs/dev.yml
    ports: 
      - "5051:5051"
  rooms_service:
    depends_on:
      - db # wait for db to be "ready" before starting
      - auth_service # wait for notifications_service to be "ready" before starting
    build:
      context: ./services/rooms_service
      dockerfile: Dockerfile
      args:
        config_path_from: configs/dev.yml
    ports:
      - "5053:5053"
  chat_service:
    depends_on:
      - redis
      - auth_service
      - rooms_service
    build:
      context: ./services/chat_service
      dockerfile: Dockerfile
      args:
        config_path_from: configs/dev.yml
    ports:
      - "5054:5054"

volumes:
  redis:
    driver: local
  postgres_data:
